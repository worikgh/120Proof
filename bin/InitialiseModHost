#!/usr/bin/perl -w
use strict;
use POSIX "setsid";

sub run_daemon( $ ) {
    my $cmd = shift or die "Must pass command";
    # -e $cmd or die "Must pass executable command";

    warn "\$cmd: $cmd";
    open(STDIN,  "< /dev/null") or die "can't read /dev/null: $!";
    open(STDOUT, "> /dev/null") or die "can't write to /dev/null: $!";
    defined(my $pid = fork())   or die "can't fork: $!";
    return($pid) if $pid;               # non-zero now means I am the parent

    (setsid() != -1)            or die "Can't start a new session: $!";
    open(STDOUT, ">/tmp/stdout") or die $!;
    open(STDERR, ">&STDOUT")    or die "can't dup stdout: $!";
    `$cmd`;
}

## Copy the definitiuons of mod-host simulator's made by modep front
## end
warn "Run ExtractModep";
print `$ENV{"Home120Proof"}/bin/ExtractModep`;
warn "Ran ExtractModep";


## Start our own version of modhost
## Start mod-host
my $pid = fork();
if(!$pid){
    warn "Start mod-host";
    $ENV{LV2_PATH} = '/usr/modep/lv2';
    &run_daemon("/home/patch/mod-host/mod-host -p 9116");
    warn "Started mod-host";
    exit 0;
}

waitpid($pid, 0);

## Wait for it to get started
sleep 1;

## Create the simulators
warn "Create simulators";
print `$ENV{"Home120Proof"}/ModhostSimulators`;
warn "Created simulators";
