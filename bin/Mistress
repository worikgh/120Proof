#!/usr/bin/perl -w
use strict;

## Mistress is the boss.  It is in charge.
## It calls the scripts, in the proper order, to set up 120Proof.

## What it must do:
## Set Home120Proof environment variable
## Set JACK_PROMISCUOUS_SERVER environment variable
## Set the mode of the LPX to 127
## Initialise mod-host: IM (66)
## IM: Kill any previous mod-host on our port
## IM: Copy the definitions of simulators writen by modep-mod-ui: EM (26)
## EM: ExtractModep.  A black box for now
## IM: Start mod-host
## IM: Start simulators MS (47)
## MS: Use definion of simulators to set them up
## MS: Make mod-host simuators
## MS: Make Jack connetions between simulators
## Start lpx_control
## Start pedal driver
## Delete all Jack MIDI connetions
## 

## Required to run 120Proof
if(!$ENV{"Home120Proof"}){
    $0 =~ /^(.+)\/bin\/[^\/]+$/ or die $0;
    $ENV{"Home120Proof"} = $1;
}

use lib("$ENV{'Home120Proof'}/Perl");
use One20Proof qw | $MODHOST_PORT |;

# &One20Proof::run_daemon( "$ENV{Home120Proof}/bin/hello_world");
# sleep 3;
# exit;
## Clean up process space.  If any copies of the pedal driver,
## lpx_control, or the mod-host are running kill them
my $pedal_driver_name = "120Proofpd";
my $pedal_driver = "$ENV{Home120Proof}/bin/$pedal_driver_name";
my $mod_host_name = "mod-host";
my $mod_host = "/usr/bin/$mod_host_name";
my $lpx_control_name = "lpx_controll";
my $lpx_scale_name = "lpx_scale";
my $lpx_control = "$ENV{'Home120Proof'}/bin/$lpx_control_name";
-x $pedal_driver or die "$!:$pedal_driver is not executable";
-x $mod_host or die "$!:$mod_host is not executable";
-x $lpx_control or die "$!:$lpx_control is not executable";
One20Proof::pkill($pedal_driver_name);
One20Proof::pkill($mod_host_name);
One20Proof::pkill($lpx_control_name);
One20Proof::pkill($lpx_scale_name);

## Clean up the modep commands file that will be written again by ExtractModep
my $modep_command_fn = "$ENV{Home120Proof}/modep_commands.txt";
-e $modep_command_fn and unlink($modep_command_fn);

## Cleanup the output directory where sub programmes write output
my $output_dir = "$ENV{Home120Proof}/output";
opendir(my $dir, $output_dir) or die "$!";
while(my $fn = readdir($dir)){
    $fn =~ /^\.\.?/ and next;
    $fn =~ /^README/ and next;
    my $fn_to_delete = "$output_dir/$fn";
    unlink($fn_to_delete) or die "$!: Cannot unlink $fn_to_delete";
}

## If the argument KILL was passed (`mistree KILL`) then stop now.
my $arg = shift;
if(defined($arg)){
    if($arg eq "KILL"){
	exit(0);
    }
}

## Required to run Jack
$ENV{"JACK_PROMISCUOUS_SERVER"} = 'jack';
## TODO There is an environment variable that stops Jack from needing
## Dbus so this whole thing can be run headless

print "120Proof's Mistress running rooted at: $ENV{'Home120Proof'} ".(scalar(localtime()))."\n";

## Set the mode of the LPX to 127
&One20Proof::run_daemon("$ENV{'Home120Proof'}/bin/lpx_mode 1");
&One20Proof::run_daemon("$ENV{Home120Proof}/bin/lpx_mode 127");


## Initialise mod-host: IM (66)
my $PORT = $One20Proof::MODHOST_PORT;

## IM: Copy the definitions of simulators writen by modep-mod-ui: EM (26)
&One20Proof::run_daemon("$ENV{Home120Proof}/bin/ExtractModep $modep_command_fn Cello_Boaster Looper Harp_Sweetner ORGANS ORGANS_Sweet");


## IM: Start mod-host
$ENV{LV2_PATH} = '/usr/modep/lv2';

if(`lsof -i:$PORT`){
    die "$?:  mod-host already on $PORT";
}


&One20Proof::run_daemon( "$mod_host -p $PORT ");

sleep 1;
unless(`lsof -i:$PORT`){
    die "$?: Failed to start mod-host on $PORT";
}


## IM: Start simulators MS (47)
&One20Proof::run_daemon("$ENV{Home120Proof}/bin/ModhostSimulators");

## Set up the controls for the LPX

One20Proof::run_daemon($lpx_control);
sleep 1;

## Run the pedal
&One20Proof::run_daemon("$pedal_driver $ENV{Home120Proof}/pedal/PEDALS ");

# Remove any nasty Jack MIDI connections

&One20Proof::run_daemon("$ENV{Home120Proof}/bin/delete_jack_midi_connections delete");

## Check that they have been deleted
`$ENV{"Home120Proof"}/bin/delete_jack_midi_connections list` and die "Failed to delete JACK Midi connections";

print STDERR "Mistress is finished with you\n";



