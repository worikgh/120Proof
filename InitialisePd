#!/usr/bin/perl -w
use strict;

&set_up_pure_data($ARGV[0]);

sub set_up_pure_data( $ ){
    ## Argument is the patch to run
    my $patch = shift;
    defined $patch or die "Must pass a patch";
    
    ## If pure data is running warn and quit
    if(`pgrep pd -x`){
	warn "pd (Pure Data) is running already.  Killing it";
	`pkill -x pd`;
	$? and die "pkill failed: $?";
	sleep 1; ## Give it a chance to di!
	`pgrep -x pd` and die "Failed to stop pd";
    }
    my $sample_rate = "48000";
    my $audio_in_dev = "'1,2'"; # Stero. Standard
    my $audio_out_dev = "'1,2'"; # Stero. Standard
    my $midiindev = "'1,2'";
    my $path = `pwd`;
    chomp $path;
    my $pd_command = "/usr/local/bin/pd -r $sample_rate " .
	"-audioindev $audio_in_dev " .
	"-audiooutdev $audio_out_dev " .
	"-jack -rt " .
	"-send \"; pd dsp 1\" " . ## Turn on DSP so pd starts making sound
	# "-path $path/pd_patches " .
	"-path $path/pd_patches/instruments " .
	# "-nogui " . ## Run headless
	# "-nostdpath " .
	"-midiindev $midiindev " .
	"$patch " .
	"";
    print "Run: $pd_command\n";
    if(fork()){
	## In parent
    }else{
	## In child
	exec $pd_command;
    }
}
