#!/usr/bin/perl -w
use strict;

## Initialise the midi connections

# Find the midi numbers of the WORLDE, Launchpad X, and Pure Data

sub set_up_midi( $ ) {
    my $cfg_fn = shift or die;

    ## Map port:device  names to string
    my %midi_devices_by_num = ();
    ## Map port:device  string to names 
    my %midi_devices_by_str = ();
    
    ## Get all the connections devices
    my @aconnect_l = `aconnect -l`;

    ## Store the existing connections in a way that can be passed to
    ## `aconnect -d`.  Each connection that we to delete is mentioned
    ## in a "Connecting To" and in a "Connected From" clause.  The
    ## keys of the HASHs are the strings for `aconnect -d`
    my %existing_connections_to = ();
    my %existing_connections_from = ();
    my $port_str = undef;
    my $port_num = undef;
    my $dev_num = undef;
    my $dev_str =  undef;

    foreach my $ac  (@aconnect_l){
	chomp $ac;
	if ($ac =~ /^client (\d+): '([^\']+)'/){
	    $port_num = $1;
	    $port_str = $2;
	    next;
	}
	if($ac =~ /^\s+(\d+)\s+'\s*(\S[^']+\S)\s*'/){
	    $dev_num = $1;
	    $dev_str =  $2;
	    $midi_devices_by_str{"$port_str:$dev_str"} = [$port_num, $dev_num];
	    $midi_devices_by_num{"$port_num:$dev_num"} = [$port_str, $dev_str];
	    next;
	}
	if($ac =~ /^\s+Connecting To: (.+)\s*$/){
	    my $con_str = $1;
	    my @con_str = split(/,\s*/, $con_str);
	    foreach my $pair (map{/^\s*(\d+):(\d+)/; [$1,$2]} @con_str){
		my $delete_args = "$port_num:$dev_num $$pair[0]:$$pair[1]";
		# defined($existing_connections_to{$delete_args}) and
		#     die "\$ac($ac) \$delete_args($delete_args)";
		$existing_connections_to{$delete_args} = 1;
	    }
	    next;
	}
	if($ac =~ /^\s+Connected From:\s+(.+)/){
	    my $con_str = $1;
	    my @con_str = split(/,\s*/, $con_str);
	    foreach my $pair (map{/^\s*(\d+):(\d+)/; [$1,$2]} @con_str){
		my $delete_args = "$$pair[0]:$$pair[1] $port_num:$dev_num";
# 		defined($existing_connections_to{$delete_args}) and die "$ac: $dele
# te_args";
		$existing_connections_from{$delete_args} = 1;
	    }
	    next;
	}	    
    }

    ## The connections to delete will be in both HASHs
    my %connections_to_delete = ();
    foreach my $to (sort keys(%existing_connections_from)){
	if (defined($existing_connections_to{"$to"})){
	    $connections_to_delete{$to} = 1;
	}
    }

    ## %connections_to_delete the keys are strings to pass to
    ## %`aconnect -d` and are all MIDI connections

    ## Store the connections requested in the config file
    my @connections = ();
    
    ## Read in the midi connections that are wanted from 120.cfg
    open(my $cfg, $cfg_fn) or die $!;
    my $flag = 0;
    while(my $line = <$cfg>){
	chomp $line;
	$line =~ /^MIDI_Connections/ and $flag = 1 and next;
	$line =~ /^\s*$/ and $flag = 0; 
	$flag or next;

	## In MIDI section
	$line =~ /^\s*#/ and next;
	$line =~ /^([^\t]+)\t([^\t]+)$/  or die $line;

	push(@connections, [$1, $2]);
    }

    ## Filter %connections_to_delete to remove the ones from the
    ## configuration file that are to keep
    foreach my $pair (@connections){
	my $from_dev = $midi_devices_by_str{"$$pair[0]"};
	my $to_dev = $midi_devices_by_str{"$$pair[1]"};
	my $key = join(":", @$from_dev)." ".  join(":", @$to_dev);
	if(defined($connections_to_delete{"$key"})){
	    delete($connections_to_delete{"$key"});
	}
    }

    ## Got all the connections that need to be deleted.
    my @to_delete =  keys(%connections_to_delete);

    sub del_con( $ ) {
	my ($l) = @_;
	my $cmd = "aconnect -d $l";
	`$cmd`;
	print STDERR "del_con($l)\n";
	$? == 0 or print STDERR "Failed $?: $cmd \n";
    }
    map {&del_con($_)} @to_delete;
    print("Finished\n");
    # ## Now make the connections
    # ## Make new connections
    # sub make_con( $$ ) {
    # 	my ($l, $r) = @_;
    # 	my $cmd = "aconnect $l $r";
    # 	`$cmd`;
    # 	print STDERR "make_con($l, $r)\n";
    # 	$? == 0 or print STDERR "Failed $?: $cmd \n";
    # }
    # foreach my $pair (@connections_dev){
    # 	&make_con($pair->[0], $pair->[1]);
    # }
}

			  
my $cfg_fn = shift or die "pass a configuration file";
&set_up_midi( $cfg_fn );
