#!/usr/bin/perl -w
use strict;
use lib("$ENV{'Home120Proof'}/Perl");
use One20Proof;
# o inhibit_exit=0
my $HOME=$ENV{'Home120Proof'};
-d $HOME or die "$!: $HOME";


## Get all Jack Audio
my @jack_connections = &One20Proof::all_jack_connections();
#print join("\n", @jack_connections)."\n";
# my $PD=&One20Proof::get_pd;
# &One20Proof::pkill($PD);
# &One20Proof::run_daemon("$PD  -jack -path $HOME/Instruments/Song01/patches/ -send \"; pd dsp 1\"  -realtime -stdpath  -nogui ");

my $LPX_BLANK_SCREEN="$HOME/bin/lpx_blank_screen";
-x $LPX_BLANK_SCREEN or die "$!: $LPX_BLANK_SCREEN";
my $LPX_DRUMS="$HOME/bin/lpx_drums";
-x $LPX_DRUMS or die "$!: $LPX_DRUMS";
&One20Proof::pkill($LPX_BLANK_SCREEN);
&One20Proof::pkill($LPX_DRUMS);
&One20Proof::run_daemon("$LPX_BLANK_SCREEN ", 1);
&One20Proof::run_daemon("$LPX_DRUMS $HOME/Instruments/Song01/lpx_pads.json");

## The music file for yoshimi
my $instrument = "$HOME/Instruments/xiz/FM Bass 1.xiz";
`killall yoshimi`; # Hack!
&One20Proof::initialise_yoshimi("Song1", $instrument);
sleep 1;

## Delete all these Jack connections
foreach my $j (@jack_connections){
    my $cmd = "jack_disconnect $j";
    print "$cmd\n";
    `$cmd 2>&1`;
}

# Get the connections to make
my $jack_cfg = $HOME."/Instruments/Song01/jack.cfg";
open(my $fh, $jack_cfg) or die $!;
grep{defined} map{
    chomp;
    my $cmd = "jack_connect $_";
    print "$cmd\n";
    `$cmd 2>&1`
} <$fh>;


print `$HOME/bin/InitialiseMidi $HOME/Instruments/Song01/midi.cfg`;


# Use arecordmidi to get raw midi?
